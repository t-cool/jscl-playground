#!/usr/bin/env node
(function(jscl){
'use strict';
(function(values, internals){
var l1=internals.make_lisp_string('loading repl-node/repl.lisp!');
console.log(internals.xstring(l1));
var l2=internals.intern('*RL*');
l2;
var l3=internals.intern('NODE-INIT');
var l4=internals.intern('*STANDARD-OUTPUT*','COMMON-LISP');
var l5=internals.intern('STREAM','COMMON-LISP');
var l6=internals.intern('STRING','COMMON-LISP');
var l7=internals.intern('*ROOT*');
var l8=internals.make_lisp_string('process');
var l9=internals.make_lisp_string('stdout');
var l10=internals.make_lisp_string('write');
var l11=internals.make_lisp_string('process');
var l12=internals.make_lisp_string('stdout');
var l13=internals.make_lisp_string('write');
var l14=internals.intern('VECTOR','COMMON-LISP');
var l15=internals.make_lisp_string('process');
var l16=internals.intern('NIL','COMMON-LISP');
var l17=internals.make_lisp_string('stdin');
var l18=internals.make_lisp_string('process');
var l19=internals.make_lisp_string('stdout');
var l20=internals.make_lisp_string('readline');
var l21=internals.make_lisp_string('createInterface');
var l22=internals.intern('WELCOME-MESSAGE');
var l23=internals.make_lisp_string('CL-USER> ');
var l24=internals.make_lisp_string('setPrompt');
var l25=internals.make_lisp_string('prompt');
var l26=internals.make_lisp_string('line');
var l27=internals.make_lisp_string('message');
var l28=internals.intern('T','COMMON-LISP');
var l29=internals.make_lisp_string('ERROR[!]: ~a~%');
var l30=internals.intern('FORMAT','COMMON-LISP');
var l31=internals.intern('*HANDLER-BINDINGS*');
var l32=internals.intern('ERROR','COMMON-LISP');
var l33=internals.make_lisp_string('message');
var l34=internals.intern('%ERROR');
var l35=internals.intern('LIST','COMMON-LISP');
var l36=internals.intern('READ-FROM-STRING','COMMON-LISP');
var l37=internals.intern('EVAL-INTERACTIVE');
var l38=internals.intern('PRINT','COMMON-LISP');
var l39=internals.make_lisp_string('ERROR: ');
var l40=internals.intern('!CONDITION-ARGS');
var l41=internals.intern('TERPRI','COMMON-LISP');
var l42=internals.make_lisp_string('prompt');
var l43=internals.make_lisp_string('on');
l3.fvalue=(function(){var FUNC=(function JSCL_USER_NODEINIT(values){internals.checkArgsAtMost(arguments.length-1,0);
var v1=this;
return (function(){l4.value=l14.fvalue(internals.pv,l5,(function JSCL_USER_NIL(values,v3){internals.checkArgs(arguments.length-1,1);
var v4=this;
return internals.js_to_lisp(internals.symbolValue(l7)[internals.xstring(l8)][internals.xstring(l9)][internals.xstring(l10)](internals.lisp_to_js(l6.fvalue(internals.pv,v3))));
}),(function JSCL_USER_NIL(values,v5){internals.checkArgs(arguments.length-1,1);
var v6=this;
return internals.js_to_lisp(internals.symbolValue(l7)[internals.xstring(l11)][internals.xstring(l12)][internals.xstring(l13)](internals.lisp_to_js(v5)));
}));
l2.value=internals.js_to_lisp(internals.symbolValue(l7)[internals.xstring(l20)][internals.xstring(l21)](internals.lisp_to_js(internals.js_to_lisp((function(){var TMP=internals.symbolValue(l7)[internals.xstring(l15)];
if (TMP===undefined) return l16.value;
TMP=TMP[internals.xstring(l17)];
return TMP===undefined?l16.value:TMP;
})())),internals.lisp_to_js(internals.js_to_lisp((function(){var TMP=internals.symbolValue(l7)[internals.xstring(l18)];
if (TMP===undefined) return l16.value;
TMP=TMP[internals.xstring(l19)];
return TMP===undefined?l16.value:TMP;
})()))));
l22.fvalue(internals.pv);
return (function(v7){return internals.bindSpecialBindings([l7],[v7],(function(){internals.js_to_lisp(internals.symbolValue(l7)[internals.xstring(l24)](internals.lisp_to_js(l23)));
internals.js_to_lisp(internals.symbolValue(l7)[internals.xstring(l25)]());
return internals.js_to_lisp(internals.symbolValue(l7)[internals.xstring(l43)](internals.lisp_to_js(l26),internals.lisp_to_js((function JSCL_USER_NIL(values,v29){internals.checkArgs(arguments.length-1,1);
var v30=this;
(function(){try{return (function(){try{var v34=[];
return (function(v35){return (function(){var v36=1;
var v37=[];
TBLOOP:while (true){try{switch(v36){case 1:(function(v38){return internals.bindSpecialBindings([l31],[v38],(function(){(function(){var v39=new internals.Cons(l32,(function JSCL_USER_NIL(values,v40){internals.checkArgs(arguments.length-1,1);
var v41=this;
v35=v40;
return (function(){throw new internals.TagNLX(v37,2);
})();
}));
var v42=new internals.Cons(v39,internals.symbolValue(l31));
return l31.value=v42;
})();
return (function(){try{return (function(){throw new internals.BlockNLX(v34,(function(v45){return (function(){return (function(v47,v48){(function(){while (v47!==l16.value){v48=internals.car(v47);
l38.fvalue(internals.pv,v48);
l16.value;
v47=internals.cdr(v47);
}return l16.value;
})();
return l16.value;
})(v45,l16.value);
})();
})((function(){var FUNC=internals.symbolFunction(l35);
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=l37.fvalue(values,l36.fvalue(internals.pv,v29));
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})()),'G139');
})();
}catch (v43){v43=internals.js_to_lisp(v43);
return (internals.isNLX(v43)?l28.value:l16.value)!==l16.value?(function(){throw v43;
})():l34.fvalue(internals.pv,(function(v44){return v44!==l16.value?v44:v43;
})(internals.js_to_lisp((function(){var TMP=v43[internals.xstring(l33)];
return TMP===undefined?l16.value:TMP;
})())));
}})();
}));
})(internals.symbolValue(l31));
case 2:(function(){throw new internals.BlockNLX(v34,(function(v49){l30.fvalue(internals.pv,l28.value,l39);
(function(){var F=internals.symbolFunction(l30);
var ARGS=[internals.pv,l28.value];
var TAIL=l40.fvalue(internals.pv,v49);
while (TAIL!=l16.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})();
return l41.fvalue(internals.pv);
})(v35),'G139');
})();
default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v37) v36=JUMP.label;
 else throw JUMP;
}}return l16.value;
})();
})(l16.value);
}catch (CF){if (CF instanceof internals.BlockNLX&&CF.id==v34) return CF.values;
 else throw CF;
}})();
}catch (v31){v31=internals.js_to_lisp(v31);
return (function(v33){return l30.fvalue(internals.pv,l28.value,l29,v33);
})((function(v32){return v32!==l16.value?v32:v31;
})(internals.js_to_lisp((function(){var TMP=v31[internals.xstring(l27)];
return TMP===undefined?l16.value:TMP;
})())));
}})();
return internals.js_to_lisp(internals.symbolValue(l2)[internals.xstring(l42)]());
}))));
}));
})(internals.symbolValue(l2));
})();
});
FUNC.fname='NODE-INIT';
return FUNC;
})();
l3;
l3.fvalue(internals.pv);
})(jscl.internals.pv, jscl.internals);
})( typeof require !== 'undefined'? require('./jscl'): window.jscl )
