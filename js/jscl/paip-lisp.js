(function(jscl){
'use strict';
(function(values, internals){
var l1=internals.make_lisp_string('PAIP');
var l2=internals.intern('COMMON-LISP','KEYWORD');
l2.value=l2;
var l3=internals.intern('NIL','COMMON-LISP');
var l4=internals.QIList(l2,l3);
var l5=internals.intern('%DEFPACKAGE');
var l6=internals.make_lisp_string('name');
var l7=internals.intern('INTERN','COMMON-LISP');
var l8=internals.intern('MAPCAR','COMMON-LISP');
var l9=internals.intern('EXPORT','COMMON-LISP');
(function(v1){l9.fvalue(internals.pv,l8.fvalue(internals.pv,(function JSCL_USER_NIL(values,v2){internals.checkArgs(arguments.length-1,1);
var v3=this;
return l7.fvalue(values,internals.js_to_lisp((function(){var TMP=v2[internals.xstring(l6)];
return TMP===undefined?l3.value:TMP;
})()),v1);
}),l3),v1);
return v1;
})(l5.fvalue(internals.pv,l1,l4));
var l10=new internals.Symbol('COMMON-LISP');
var l11=internals.intern('UNLOCK-PACKAGE','SB-EXT');
var l12=new internals.Symbol('COMMON-LISP-USER');
l11.fvalue(internals.pv,l10);
l11.fvalue(internals.pv,l12);
var l13=internals.intern('*PAIP-MODULES*','COMMON-LISP-USER');
var l14=internals.intern('T','COMMON-LISP');
if ((l13.value!==undefined?l14.value:l3.value)!==l3.value) l3.value;
 else l13.value=l3;
l13;
var l15=internals.intern('*PAIP-FILES*','COMMON-LISP-USER');
var l16=internals.QIList(internals.make_lisp_string('auxfns'),internals.make_lisp_string('tutor'),internals.make_lisp_string('examples'),internals.make_lisp_string('intro'),internals.make_lisp_string('simple'),internals.make_lisp_string('overview'),internals.make_lisp_string('gps1'),internals.make_lisp_string('gps'),internals.make_lisp_string('eliza1'),internals.make_lisp_string('eliza'),internals.make_lisp_string('patmatch'),internals.make_lisp_string('eliza-pm'),internals.make_lisp_string('search'),internals.make_lisp_string('gps-srch'),internals.make_lisp_string('student'),internals.make_lisp_string('macsyma'),internals.make_lisp_string('macsymar'),internals.make_lisp_string('unify'),internals.make_lisp_string('prolog1'),internals.make_lisp_string('prolog'),internals.make_lisp_string('prologc1'),internals.make_lisp_string('prologc2'),internals.make_lisp_string('prologc'),internals.make_lisp_string('prologcp'),internals.make_lisp_string('clos'),internals.make_lisp_string('krep1'),internals.make_lisp_string('krep2'),internals.make_lisp_string('krep'),internals.make_lisp_string('cmacsyma'),internals.make_lisp_string('mycin'),internals.make_lisp_string('mycin-r'),internals.make_lisp_string('waltz'),internals.make_lisp_string('othello'),internals.make_lisp_string('othello2'),internals.make_lisp_string('syntax1'),internals.make_lisp_string('syntax2'),internals.make_lisp_string('syntax3'),internals.make_lisp_string('unifgram'),internals.make_lisp_string('grammar'),internals.make_lisp_string('lexicon'),internals.make_lisp_string('interp1'),internals.make_lisp_string('interp2'),internals.make_lisp_string('interp3'),internals.make_lisp_string('compile1'),internals.make_lisp_string('compile2'),internals.make_lisp_string('compile3'),internals.make_lisp_string('compopt'),l3);
if ((l15.value!==undefined?l14.value:l3.value)!==l3.value) l3.value;
 else l15.value=l16;
l15;
var l17=internals.intern('REQUIRES','COMMON-LISP-USER');
var l18=internals.intern('LIST','COMMON-LISP');
var l19=internals.intern('ENDP','COMMON-LISP');
var l20=internals.intern('STRING-DOWNCASE','COMMON-LISP');
var l21=internals.intern('TEST','KEYWORD');
l21.value=l21;
var l22=internals.intern('EQUAL','COMMON-LISP');
var l23=internals.intern('FIND','COMMON-LISP');
var l24=internals.intern('NOT','COMMON-LISP');
var l25=internals.intern('LOAD-PAIP-FILE','COMMON-LISP-USER');
l17.fvalue=(function(){var FUNC=(function JSCL_USER_REQUIRES(values){var v4=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v4=new internals.Cons(arguments[I+1],v4);
var v5=this;
return (function(){return (function(v7,v8){return (function(v9){return (function(){var v11=l18.fvalue(internals.pv,l3.value);
var v12=v11;
return (function(){try{var v13=[];
return (function(){var v14=1;
var v15=[];
TBLOOP:while (true){try{switch(v14){case 1:if (l19.fvalue(internals.pv,v8)!==l3.value) (function(){throw new internals.TagNLX(v15,2);
})();
 else l3.value;
v7=internals.car(v8);
v8=internals.cdr(v8);
v9=l20.fvalue(internals.pv,v7);
if (l24.fvalue(internals.pv,l23.fvalue(internals.pv,v9,internals.symbolValue(l13),l21.value,l22))!==l3.value) (function(){var TMP=v12;
TMP.cdr=v12=l18.fvalue(internals.pv,((function(){var v17=v9;
var v18=new internals.Cons(v17,internals.symbolValue(l13));
return l13.value=v18;
})(),l25.fvalue(values,v9)));
return TMP;
})();
 else l3.value;
(function(){throw new internals.TagNLX(v15,1);
})();
case 2:(function(){var values=internals.mv;
throw new internals.BlockNLX(v13,internals.cdr(v11),'NIL');
})();
default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v15) v14=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
}catch (CF){if (CF instanceof internals.BlockNLX&&CF.id==v13) return values.apply(this,internals.forcemv(CF.values));
 else throw CF;
}})();
})();
})(l3.value);
})(l3.value,v4);
})();
});
FUNC.fname='REQUIRES';
FUNC.docstring='The arguments are files that are required to run an application.';
return FUNC;
})();
l17;
var l26=internals.intern('*PAIP-DIRECTORY*','COMMON-LISP-USER');
var l27=internals.intern('NAME','KEYWORD');
l27.value=l27;
var l28=internals.intern('TYPE','KEYWORD');
l28.value=l28;
var l29=internals.intern('DEFAULTS','KEYWORD');
l29.value=l29;
var l30=internals.intern('*LOAD-TRUENAME*','COMMON-LISP');
var l31=internals.make_lisp_string('');
var l32=internals.intern('TRUENAME','COMMON-LISP');
var l33=internals.intern('MAKE-PATHNAME','COMMON-LISP');
var l34=internals.make_lisp_string('vardoc');
var l35=internals.make_lisp_string("The location of the source files for this book.  If things don't work,\n  change it to reflect the location of the files on your computer.");
l26.value=l33.fvalue(internals.pv,l27.value,l3.value,l28.value,l3.value,l29.value,(function(v19){return v19!==l3.value?v19:(function(v20){return v20!==l3.value?v20:l32.fvalue(internals.pv,l31);
})((l30.value!==undefined?l14.value:l3.value)!==l3.value?internals.symbolValue(l30):l3.value);
})(l3.value));
(function(){var OBJ=l26;
var TMP=(OBJ[internals.xstring(l34)]=internals.lisp_to_js(l35));
return TMP===undefined?l3.value:TMP;
})();
l26;
var l36=internals.intern('*PAIP-SOURCE*','COMMON-LISP-USER');
var l37=internals.make_lisp_string('lisp');
l36.value=l33.fvalue(internals.pv,l27.value,l3.value,l28.value,l37,l29.value,internals.symbolValue(l26));
l36;
var l38=internals.intern('*PAIP-BINARY*','COMMON-LISP-USER');
var l39=internals.make_lisp_string('bin');
var l40=internals.intern('FIRST','COMMON-LISP');
var l41=internals.intern('DIRECTORY','KEYWORD');
l41.value=l41;
var l42=internals.intern('PATHNAME-DIRECTORY','COMMON-LISP');
var l43=internals.QIList(internals.make_lisp_string('bin'),l3);
var l44=internals.intern('APPEND','COMMON-LISP');
l38.value=l33.fvalue(internals.pv,l27.value,l3.value,l28.value,l40.fvalue(internals.pv,l18.fvalue(internals.pv,l39)),l41.value,l44.fvalue(internals.pv,l42.fvalue(internals.pv,internals.symbolValue(l36)),l43),l29.value,internals.symbolValue(l26));
l38;
var l45=internals.intern('PAIP-PATHNAME','COMMON-LISP-USER');
var l46=internals.intern('LISP','KEYWORD');
l46.value=l46;
var l47=internals.intern('EQL','COMMON-LISP');
var l48=internals.intern('SOURCE','KEYWORD');
l48.value=l48;
var l49=internals.intern('BINARY','KEYWORD');
l49.value=l49;
var l50=internals.intern('BIN','KEYWORD');
l50.value=l50;
var l51=internals.make_lisp_string("ECASE expression failed for the object `~S'.");
var l52=internals.intern('ERROR','COMMON-LISP');
l45.fvalue=(function(){var FUNC=(function JSCL_USER_PAIPPATHNAME(values,v21,v22){internals.checkArgsAtLeast(arguments.length-1,1);
internals.checkArgsAtMost(arguments.length-1,2);
switch(arguments.length-1){case 1:v22=l46.value;
;
default:break;
}var v23=this;
return (function(){return l33.fvalue(values,l27.value,v21,l29.value,(function(v25){return (function(v26){return (function(v27){return v27!==l3.value?v27:l47.fvalue(internals.pv,v26,l48);
})(l47.fvalue(internals.pv,v26,l46))!==l3.value?(l3.value,internals.symbolValue(l36)):(function(v28){return v28!==l3.value?v28:l47.fvalue(internals.pv,v26,l50);
})(l47.fvalue(internals.pv,v26,l49))!==l3.value?(l3.value,internals.symbolValue(l38)):(l3.value,l52.fvalue(values,l51,v25));
})(v25);
})(v22));
})();
});
FUNC.fname='PAIP-PATHNAME';
return FUNC;
})();
l45;
var l53=internals.intern('COMPILE-ALL-PAIP-FILES','COMMON-LISP-USER');
var l54=internals.intern('COMPILE-PAIP-FILE','COMMON-LISP-USER');
var l55=internals.intern('MAPC','COMMON-LISP');
l53.fvalue=(function(){var FUNC=(function JSCL_USER_COMPILEALLPAIPFILES(values){internals.checkArgsAtMost(arguments.length-1,0);
var v29=this;
return (function(){return l55.fvalue(values,internals.symbolFunction(l54),internals.symbolValue(l15));
})();
});
FUNC.fname='COMPILE-ALL-PAIP-FILES';
return FUNC;
})();
l53;
var l56=internals.intern('LOAD','COMMON-LISP');
var l57=internals.intern('OUTPUT-FILE','KEYWORD');
l57.value=l57;
var l58=internals.intern('ENSURE-DIRECTORIES-EXIST','COMMON-LISP');
var l59=internals.intern('COMPILE-FILE','COMMON-LISP');
l54.fvalue=(function(){var FUNC=(function JSCL_USER_COMPILEPAIPFILE(values,v31){internals.checkArgs(arguments.length-1,1);
var v32=this;
return (function(){return (function(v34){l56.fvalue(internals.pv,v34);
return l59.fvalue(values,v34,l57.value,l58.fvalue(internals.pv,l45.fvalue(internals.pv,v31,l49.value)));
})(l45.fvalue(internals.pv,v31,l46.value));
})();
});
FUNC.fname='COMPILE-PAIP-FILE';
return FUNC;
})();
l54;
var l60=internals.intern('FILE-WRITE-DATE','COMMON-LISP');
var l61=internals.intern('IGNORE-ERRORS','COMMON-LISP');
var l62=internals.intern('*PACKAGE*','COMMON-LISP');
var l63=internals.intern('PAIP','KEYWORD');
l63.value=l63;
var l64=internals.intern('FIND-PACKAGE','COMMON-LISP');
var l65=internals.intern('PROBE-FILE','COMMON-LISP');
l25.fvalue=(function(){var FUNC=(function JSCL_USER_LOADPAIPFILE(values,v35){internals.checkArgs(arguments.length-1,1);
var v36=this;
return (function(){return (function(){var v38=[];
try{var v39=l45.fvalue(internals.pv,v35,l46.value);
var v40=l60.fvalue(internals.pv,v39);
var v41=l45.fvalue(internals.pv,v35,l49.value);
var v42=l61.fvalue(internals.pv,l60.fvalue(internals.pv,v41));
var v44=(function(v43){return v43!==l3.value?v43:internals.symbolValue(l62);
})(l64.fvalue(internals.pv,l63.value));
l62.stack.push(l62.value);
v38.push(l62);
l62.value=v44;
return l56.fvalue(values,(l65.fvalue(internals.pv,v41)!==l3.value?v40!==l3.value?v42!==l3.value?(function(){var x1=v42;
if (typeof x1!='number') throw 'Not a number!';
var x2=v40;
if (typeof x2!='number') throw 'Not a number!';
return x1>=x2?l14.value:l3.value;
})():l3.value:l3.value:l3.value)!==l3.value?v41:v39);
}finally{v38.forEach((function(S){S.value=S.stack.pop();
}));
}})();
})();
});
FUNC.fname='LOAD-PAIP-FILE';
FUNC.docstring='Load the binary file if it exists and is newer, else load the source.';
return FUNC;
})();
l25;
var l66=internals.intern('SIDE-EFFECT-FREE?','COMMON-LISP-USER');
var l67=internals.intern('ATOM','COMMON-LISP');
var l68=internals.intern('CONSTANTP','COMMON-LISP');
var l69=internals.intern('FUNCTION','COMMON-LISP');
var l70=internals.intern('STARTS-WITH','COMMON-LISP-USER');
var l71=internals.intern('THE','COMMON-LISP');
var l72=internals.intern('THIRD','COMMON-LISP');
var l73=internals.intern('REST2','COMMON-LISP-USER');
var l74=internals.intern('REST','COMMON-LISP');
var l75=internals.intern('FIND-ANYWHERE','COMMON-LISP-USER');
l66.fvalue=(function(){var FUNC=(function JSCL_USER_SIDEEFFECTFREE(values,v45){internals.checkArgs(arguments.length-1,1);
var v46=this;
return (function(){return (function(v48){return v48!==l3.value?v48:(function(v49){return v49!==l3.value?v49:(function(v50){return v50!==l3.value?v50:l70.fvalue(internals.pv,v45,l71)!==l3.value?l66.fvalue(values,l72.fvalue(internals.pv,v45)):l3.value;
})(l70.fvalue(internals.pv,v45,l69));
})(l68.fvalue(internals.pv,v45));
})(l67.fvalue(internals.pv,v45));
})();
});
FUNC.fname='SIDE-EFFECT-FREE?';
FUNC.docstring='Is exp a constant, variable, or function,\n  or of the form (THE type x) where x is side-effect-free?';
return FUNC;
})();
l66;
l73.fvalue=(function(){var FUNC=(function JSCL_USER_REST(values,v51){internals.checkArgs(arguments.length-1,1);
var v52=this;
return (function(){return l74.fvalue(values,l74.fvalue(internals.pv,v51));
})();
});
FUNC.fname='REST2';
FUNC.docstring='The rest of a list after the first TWO elements.';
return FUNC;
})();
l73;
l75.fvalue=(function(){var FUNC=(function JSCL_USER_FINDANYWHERE(values,v54,v55){internals.checkArgs(arguments.length-1,2);
var v56=this;
return (function(){return l67.fvalue(internals.pv,v55)!==l3.value?l47.fvalue(internals.pv,v54,v55)!==l3.value?v55:l3.value:(function(v58){return v58!==l3.value?v58:l75.fvalue(values,v54,l74.fvalue(internals.pv,v55));
})(l75.fvalue(internals.pv,v54,l40.fvalue(internals.pv,v55)));
})();
});
FUNC.fname='FIND-ANYWHERE';
FUNC.docstring='Does item occur anywhere in tree?';
return FUNC;
})();
l75;
l70.fvalue=(function(){var FUNC=(function JSCL_USER_STARTSWITH(values,v59,v60){internals.checkArgs(arguments.length-1,2);
var v61=this;
return (function(){return (v59 instanceof internals.Cons?l14.value:l3.value)!==l3.value?l47.fvalue(values,l40.fvalue(internals.pv,v59),v60):l3.value;
})();
});
FUNC.fname='STARTS-WITH';
FUNC.docstring='Is x a list whose first element is x?';
return FUNC;
})();
l70;
var l76=internals.intern('FIND-ALL-IF','COMMON-LISP-USER');
var l77=internals.intern('REMOVE-IF-NOT','COMMON-LISP');
(function(){var v64=l76;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v66){switch(arguments.length-1){case 0:v66=l3.value;
;
default:break;
}var v65=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v65=new internals.Cons(arguments[I+1],v65);
var v67=this;
return v64.fvalue=v66;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=internals.symbolFunction(l77);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
var l78=internals.intern('FIND-ALL','COMMON-LISP-USER');
var l79=internals.intern('TEST-NOT','KEYWORD');
l79.value=l79;
var l80=internals.intern('&ALLOW-OTHER-KEYS','KEYWORD');
l80.value=l80;
var l81=internals.intern('REMOVE','COMMON-LISP');
var l82=internals.intern('COMPLEMENT','COMMON-LISP');
l78.fvalue=(function(){var FUNC=(function JSCL_USER_FINDALL(values,v69,v70){internals.checkArgsAtLeast(arguments.length-1,2);
var v68=l3.value;
var I;
for (I=arguments.length-1-1;I>=2;I--)v68=new internals.Cons(arguments[I+1],v68);
var v71;
var v72;
var v73;
var I;
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l21.value) {v71=arguments[I+1+1];
break;
}if (I==arguments.length-1) v71=internals.symbolFunction(l47);
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l79.value) {v72=arguments[I+1+1];
break;
}if (I==arguments.length-1) v72=l3.value;
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l80.value) {v73=arguments[I+1+1];
break;
}if (I==arguments.length-1) v73=l3.value;
var START=2;
if ((arguments.length-1-START)%2==1) throw 'Odd number of keyword arguments.';
for (I=START;I<arguments.length-1;I+=2)if (arguments[I+1]!==l21.value&&arguments[I+1]!==l79.value&&arguments[I+1]!==l80.value) throw 'Unknown keyword argument '+arguments[I+1]['name'];
var v74=this;
return (function(){return v72!==l3.value?(function(){var F=internals.symbolFunction(l81);
var ARGS=[values,v69,v70,l79.value,l82.fvalue(internals.pv,v72)];
var TAIL=v68;
while (TAIL!=l3.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})():(function(){var F=internals.symbolFunction(l81);
var ARGS=[values,v69,v70,l21.value,l82.fvalue(internals.pv,v71)];
var TAIL=v68;
while (TAIL!=l3.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})();
})();
});
FUNC.fname='FIND-ALL';
FUNC.docstring="Find all those elements of sequence that match item,\n  according to the keywords.  Doesn't alter sequence.";
return FUNC;
})();
l78;
var l83=internals.intern('PARTITION-IF','COMMON-LISP-USER');
var l84=internals.intern('NREVERSE','COMMON-LISP');
l83.fvalue=(function(){var FUNC=(function JSCL_USER_PARTITIONIF(values,v76,v77){internals.checkArgs(arguments.length-1,2);
var v78=this;
return (function(){return (function(v80,v81){(function(){return (function(v83,v84){(function(){while (v83!==l3.value){v84=internals.car(v83);
if ((function(){var F=v76;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v84);
})()!==l3.value) (function(){var v86=v84;
var v87=new internals.Cons(v86,v80);
return v80=v87;
})();
 else (function(){var v89=v84;
var v90=new internals.Cons(v89,v81);
return v81=v90;
})();
l3.value;
v83=internals.cdr(v83);
}return l3.value;
})();
return l3.value;
})(v77,l3.value);
})();
return values(l84.fvalue(internals.pv,v80),l84.fvalue(internals.pv,v81));
})(l3.value,l3.value);
})();
});
FUNC.fname='PARTITION-IF';
FUNC.docstring="Return 2 values: elements of list that satisfy pred,\n  and elements that don't.";
return FUNC;
})();
l83;
var l85=internals.intern('MAYBE-ADD','COMMON-LISP-USER');
var l86=internals.intern('NULL','COMMON-LISP');
var l87=internals.intern('LENGTH=1','COMMON-LISP-USER');
l85.fvalue=(function(){var FUNC=(function JSCL_USER_MAYBEADD(values,v91,v92,v93){internals.checkArgsAtLeast(arguments.length-1,2);
internals.checkArgsAtMost(arguments.length-1,3);
switch(arguments.length-1){case 2:v93=l3.value;
;
default:break;
}var v94=this;
return (function(){return l86.fvalue(internals.pv,v92)!==l3.value?v93:l87.fvalue(internals.pv,v92)!==l3.value?l40.fvalue(values,v92):new internals.Cons(v91,v92);
})();
});
FUNC.fname='MAYBE-ADD';
FUNC.docstring="For example, (maybe-add 'and exps t) returns\n  t if exps is nil, exps if there is only one,\n  and (and exp1 exp2...) if there are several exps.";
return FUNC;
})();
l85;
var l88=internals.intern('SEQ-REF','COMMON-LISP-USER');
var l89=internals.intern('IF','COMMON-LISP');
var l90=internals.intern('LISTP','COMMON-LISP');
var l91=internals.intern('PROG1','COMMON-LISP');
var l92=internals.intern('SETQ','COMMON-LISP');
var l93=internals.intern('AREF','COMMON-LISP');
l88.fvalue=(function(){var FUNC=(function JSCL_USER_SEQREF(values,v96,v97){internals.checkArgs(arguments.length-1,2);
var v98=this;
return (function(){return l18.fvalue(values,l89,l18.fvalue(internals.pv,l90,v96),l18.fvalue(internals.pv,l91,l18.fvalue(internals.pv,l40,v96),l18.fvalue(internals.pv,l92,v96,l18.fvalue(internals.pv,l71,l18,l18.fvalue(internals.pv,l74,v96)))),l18.fvalue(internals.pv,l93,v96,v97));
})();
});
FUNC.fname='SEQ-REF';
FUNC.docstring='Return code that indexes into a sequence, using\n  the pop-lists/aref-vectors strategy.';
return FUNC;
})();
l88;
var l94=internals.intern('MAYBE-SET-FILL-POINTER','COMMON-LISP-USER');
var l95=internals.intern('ARRAYP','COMMON-LISP');
var l96=internals.intern('ARRAY-HAS-FILL-POINTER-P','COMMON-LISP');
var l97=internals.intern('SET-FILL-POINTER');
var l98=internals.intern('FILL-POINTER','COMMON-LISP');
var l99=internals.intern('MAX','COMMON-LISP');
l94.fvalue=(function(){var FUNC=(function JSCL_USER_MAYBESETFILLPOINTER(values,v100,v101){internals.checkArgs(arguments.length-1,2);
var v102=this;
return (function(){return (l95.fvalue(internals.pv,v100)!==l3.value?l96.fvalue(internals.pv,v100):l3.value)!==l3.value?(function(){var v105=v100;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v107){switch(arguments.length-1){case 0:v107=l3.value;
;
default:break;
}var v106=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v106=new internals.Cons(arguments[I+1],v106);
var v108=this;
return l97.fvalue(values,v105,v107);
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=l99.fvalue(values,l98.fvalue(internals.pv,v100),v101);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})():l3.value;
})();
});
FUNC.fname='MAYBE-SET-FILL-POINTER';
FUNC.docstring='If this is an array with a fill pointer, set it to\n  new-length, if that is longer than the current length.';
return FUNC;
})();
l94;
var l100=internals.intern('SYMBOL','COMMON-LISP');
var l101=internals.make_lisp_string('~{~a~}');
var l102=internals.intern('FORMAT','COMMON-LISP');
l100.fvalue=(function(){var FUNC=(function JSCL_USER_SYMBOL(values){var v109=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v109=new internals.Cons(arguments[I+1],v109);
var v110=this;
return (function(){return l7.fvalue(values,l102.fvalue(internals.pv,l3.value,l101,v109));
})();
});
FUNC.fname='SYMBOL';
FUNC.docstring='Concatenate symbols or strings to form an interned symbol';
return FUNC;
})();
l100;
var l103=internals.intern('NEW-SYMBOL','COMMON-LISP-USER');
var l104=internals.make_lisp_string('~{~a~}');
l103.fvalue=(function(){var FUNC=(function JSCL_USER_NEWSYMBOL(values){var v112=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v112=new internals.Cons(arguments[I+1],v112);
var v113=this;
return (function(){return new internals.Symbol(internals.lisp_to_js(l102.fvalue(internals.pv,l3.value,l104,v112)));
})();
});
FUNC.fname='NEW-SYMBOL';
FUNC.docstring='Concatenate symbols or strings to form an uninterned symbol';
return FUNC;
})();
l103;
var l105=internals.intern('LAST1','COMMON-LISP-USER');
var l106=internals.intern('LAST','COMMON-LISP');
l105.fvalue=(function(){var FUNC=(function JSCL_USER_LAST(values,v115){internals.checkArgs(arguments.length-1,1);
var v116=this;
return (function(){return l40.fvalue(values,l106.fvalue(internals.pv,v115));
})();
});
FUNC.fname='LAST1';
FUNC.docstring='Return the last element (not last cons cell) of list';
return FUNC;
})();
l105;
var l107=internals.intern('MAPPEND','COMMON-LISP-USER');
l107.fvalue=(function(){var FUNC=(function JSCL_USER_MAPPEND(values,v118,v119){internals.checkArgs(arguments.length-1,2);
var v120=this;
return (function(){return (function(){var F=internals.symbolFunction(l44);
var ARGS=[values];
var TAIL=l8.fvalue(internals.pv,v118,v119);
while (TAIL!=l3.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})();
})();
});
FUNC.fname='MAPPEND';
FUNC.docstring='Append the results of calling fn on each element of list.\n  Like mapcon, but uses append instead of nconc.';
return FUNC;
})();
l107;
var l108=internals.intern('MKLIST','COMMON-LISP-USER');
l108.fvalue=(function(){var FUNC=(function JSCL_USER_MKLIST(values,v122){internals.checkArgs(arguments.length-1,1);
var v123=this;
return (function(){return l90.fvalue(internals.pv,v122)!==l3.value?v122:l18.fvalue(values,v122);
})();
});
FUNC.fname='MKLIST';
FUNC.docstring='If x is a list return it, otherwise return the list of x';
return FUNC;
})();
l108;
var l109=internals.intern('FLATTEN','COMMON-LISP-USER');
l109.fvalue=(function(){var FUNC=(function JSCL_USER_FLATTEN(values,v125){internals.checkArgs(arguments.length-1,1);
var v126=this;
return (function(){return l107.fvalue(values,internals.symbolFunction(l108),v125);
})();
});
FUNC.fname='FLATTEN';
FUNC.docstring='Get rid of imbedded lists (to one level only).';
return FUNC;
})();
l109;
var l110=internals.intern('RANDOM-ELT','COMMON-LISP-USER');
var l111=internals.intern('LENGTH','COMMON-LISP');
var l112=internals.intern('RANDOM','COMMON-LISP');
var l113=internals.intern('ELT','COMMON-LISP');
l110.fvalue=(function(){var FUNC=(function JSCL_USER_RANDOMELT(values,v128){internals.checkArgs(arguments.length-1,1);
var v129=this;
return (function(){return l113.fvalue(values,v128,l112.fvalue(internals.pv,l111.fvalue(internals.pv,v128)));
})();
});
FUNC.fname='RANDOM-ELT';
FUNC.docstring='Pick a random element out of a sequence.';
return FUNC;
})();
l110;
var l114=internals.intern('MEMBER-EQUAL','COMMON-LISP-USER');
var l115=internals.intern('MEMBER','COMMON-LISP');
l114.fvalue=(function(){var FUNC=(function JSCL_USER_MEMBEREQUAL(values,v131,v132){internals.checkArgs(arguments.length-1,2);
var v133=this;
return (function(){return l115.fvalue(values,v131,v132,l21.value,internals.symbolFunction(l22));
})();
});
FUNC.fname='MEMBER-EQUAL';
return FUNC;
})();
l114;
var l116=internals.intern('COMPOSE','COMMON-LISP-USER');
var l117=internals.intern('FUNCALL','COMMON-LISP');
var l118=internals.intern('FROM-END','KEYWORD');
l118.value=l118;
var l119=internals.intern('INITIAL-VALUE','KEYWORD');
l119.value=l119;
var l120=internals.intern('REDUCE','COMMON-LISP');
l116.fvalue=(function(){var FUNC=(function JSCL_USER_COMPOSE(values){var v135=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v135=new internals.Cons(arguments[I+1],v135);
var v136=this;
return (function(){return (function JSCL_USER_NIL(values,v138){internals.checkArgs(arguments.length-1,1);
var v139=this;
return l120.fvalue(values,internals.symbolFunction(l117),v135,l118.value,l14.value,l119.value,v138);
});
})();
});
FUNC.fname='COMPOSE';
return FUNC;
})();
l116;
var l121=internals.intern('*DBG-IDS*','COMMON-LISP-USER');
var l122=internals.make_lisp_string('vardoc');
var l123=internals.make_lisp_string('Identifiers used by dbg');
if ((l121.value!==undefined?l14.value:l3.value)!==l3.value) l3.value;
 else l121.value=l3.value;
(function(){var OBJ=l121;
var TMP=(OBJ[internals.xstring(l122)]=internals.lisp_to_js(l123));
return TMP===undefined?l3.value:TMP;
})();
l121;
var l124=internals.intern('DBG','COMMON-LISP-USER');
var l125=internals.intern('*DEBUG-IO*','COMMON-LISP');
var l126=internals.intern('FRESH-LINE','COMMON-LISP');
l124.fvalue=(function(){var FUNC=(function JSCL_USER_DBG(values,v141,v142){internals.checkArgsAtLeast(arguments.length-1,2);
var v140=l3.value;
var I;
for (I=arguments.length-1-1;I>=2;I--)v140=new internals.Cons(arguments[I+1],v140);
var v143=this;
return (function(){return l115.fvalue(internals.pv,v141,internals.symbolValue(l121))!==l3.value?(l126.fvalue(internals.pv,internals.symbolValue(l125)),(function(){var F=internals.symbolFunction(l102);
var ARGS=[values,internals.symbolValue(l125),v142];
var TAIL=v140;
while (TAIL!=l3.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})()):l3.value;
})();
});
FUNC.fname='DBG';
FUNC.docstring='Print debugging info if (DEBUG ID) has been specified.';
return FUNC;
})();
l124;
var l127=internals.intern('DEBUG','COMMON-LISP');
var l128=internals.intern('UNION','COMMON-LISP');
l127.fvalue=(function(){var FUNC=(function JSCL_USER_DEBUG(values){var v145=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v145=new internals.Cons(arguments[I+1],v145);
var v146=this;
return (function(){return (function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v150){switch(arguments.length-1){case 0:v150=l3.value;
;
default:break;
}var v149=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v149=new internals.Cons(arguments[I+1],v149);
var v151=this;
return l121.value=v150;
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=l128.fvalue(values,v145,internals.symbolValue(l121));
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
})();
});
FUNC.fname='DEBUG';
FUNC.docstring='Start dbg output on the given ids.';
return FUNC;
})();
l127;
var l129=internals.intern('UNDEBUG','COMMON-LISP-USER');
var l130=internals.intern('SET-DIFFERENCE','COMMON-LISP');
l129.fvalue=(function(){var FUNC=(function JSCL_USER_UNDEBUG(values){var v152=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v152=new internals.Cons(arguments[I+1],v152);
var v153=this;
return (function(){return (function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v157){switch(arguments.length-1){case 0:v157=l3.value;
;
default:break;
}var v156=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v156=new internals.Cons(arguments[I+1],v156);
var v158=this;
return l121.value=v157;
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=l86.fvalue(internals.pv,v152)!==l3.value?l3.value:l130.fvalue(values,internals.symbolValue(l121),v152);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
})();
});
FUNC.fname='UNDEBUG';
FUNC.docstring='Stop dbg on the ids.  With no ids, stop dbg altogether.';
return FUNC;
})();
l129;
var l131=internals.intern('DBG-INDENT','COMMON-LISP-USER');
var l132=internals.make_lisp_string('  ');
var l133=internals.intern('PRINC','COMMON-LISP');
l131.fvalue=(function(){var FUNC=(function JSCL_USER_DBGINDENT(values,v160,v161,v162){internals.checkArgsAtLeast(arguments.length-1,3);
var v159=l3.value;
var I;
for (I=arguments.length-1-1;I>=3;I--)v159=new internals.Cons(arguments[I+1],v159);
var v163=this;
return (function(){return l115.fvalue(internals.pv,v160,internals.symbolValue(l121))!==l3.value?(l126.fvalue(internals.pv,internals.symbolValue(l125)),(function(){return (function(v166,v167){(function(){while ((function(){var x1=v166;
if (typeof x1!='number') throw 'Not a number!';
var x2=v167;
if (typeof x2!='number') throw 'Not a number!';
return x1<x2?l14.value:l3.value;
})()!==l3.value){l133.fvalue(internals.pv,l132,internals.symbolValue(l125));
l3.value;
(function(){var v169=1;
var v170=(function(){var x1=v166;
if (typeof x1!='number') throw 'Not a number!';
var x2=v169;
if (typeof x2!='number') throw 'Not a number!';
return x1+x2;
})();
return v166=v170;
})();
}return l3.value;
})();
return l3.value;
})(0,v161);
})(),(function(){var F=internals.symbolFunction(l102);
var ARGS=[values,internals.symbolValue(l125),v162];
var TAIL=v159;
while (TAIL!=l3.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})()):l3.value;
})();
});
FUNC.fname='DBG-INDENT';
FUNC.docstring='Print indented debugging info if (DEBUG ID) has been specified.';
return FUNC;
})();
l131;
var l134=internals.intern('FAIL','COMMON-LISP-USER');
l134.value=l3.value;
l134;
var l135=internals.intern('NO-BINDINGS','COMMON-LISP-USER');
var l136=internals.QIList(internals.QIList(l14,l14),l3);
l135.value=l136;
l135;
var l137=internals.intern('PAT-MATCH','COMMON-LISP-USER');
var l138=internals.intern('VARIABLE-P','COMMON-LISP-USER');
var l139=internals.intern('MATCH-VARIABLE','COMMON-LISP-USER');
l137.fvalue=(function(){var FUNC=(function JSCL_USER_PATMATCH(values,v171,v172,v173){internals.checkArgsAtLeast(arguments.length-1,2);
internals.checkArgsAtMost(arguments.length-1,3);
switch(arguments.length-1){case 2:v173=l135.value;
;
default:break;
}var v174=this;
return (function(){return (v173===l134.value?l14.value:l3.value)!==l3.value?l134.value:l138.fvalue(internals.pv,v171)!==l3.value?l139.fvalue(values,v171,v172,v173):l47.fvalue(internals.pv,v171,v172)!==l3.value?v173:((v171 instanceof internals.Cons?l14.value:l3.value)!==l3.value?v172 instanceof internals.Cons?l14.value:l3.value:l3.value)!==l3.value?l137.fvalue(values,l74.fvalue(internals.pv,v171),l74.fvalue(internals.pv,v172),l137.fvalue(internals.pv,l40.fvalue(internals.pv,v171),l40.fvalue(internals.pv,v172),v173)):l134.value;
})();
});
FUNC.fname='PAT-MATCH';
FUNC.docstring='Match pattern against input in the context of the bindings';
return FUNC;
})();
l137;
var l140=internals.intern('GET-BINDING','COMMON-LISP-USER');
var l141=internals.intern('EXTEND-BINDINGS','COMMON-LISP-USER');
var l142=internals.intern('BINDING-VAL','COMMON-LISP-USER');
l139.fvalue=(function(){var FUNC=(function JSCL_USER_MATCHVARIABLE(values,v176,v177,v178){internals.checkArgs(arguments.length-1,3);
var v179=this;
return (function(){return (function(v181){return l24.fvalue(internals.pv,v181)!==l3.value?l141.fvalue(values,v176,v177,v178):l22.fvalue(internals.pv,v177,l142.fvalue(internals.pv,v181))!==l3.value?v178:l134.value;
})(l140.fvalue(internals.pv,v176,v178));
})();
});
FUNC.fname='MATCH-VARIABLE';
FUNC.docstring='Does VAR match input?  Uses (or updates) and returns bindings.';
return FUNC;
})();
l139;
var l143=internals.intern('MAKE-BINDING','COMMON-LISP-USER');
l143.fvalue=(function(){var FUNC=(function JSCL_USER_MAKEBINDING(values,v182,v183){internals.checkArgs(arguments.length-1,2);
var v184=this;
return (function(){return new internals.Cons(v182,v183);
})();
});
FUNC.fname='MAKE-BINDING';
return FUNC;
})();
l143;
var l144=internals.intern('BINDING-VAR','COMMON-LISP-USER');
l144.fvalue=(function(){var FUNC=(function JSCL_USER_BINDINGVAR(values,v186){internals.checkArgs(arguments.length-1,1);
var v187=this;
return (function(){return internals.car(v186);
})();
});
FUNC.fname='BINDING-VAR';
FUNC.docstring='Get the variable part of a single binding.';
return FUNC;
})();
l144;
l142.fvalue=(function(){var FUNC=(function JSCL_USER_BINDINGVAL(values,v189){internals.checkArgs(arguments.length-1,1);
var v190=this;
return (function(){return internals.cdr(v189);
})();
});
FUNC.fname='BINDING-VAL';
FUNC.docstring='Get the value part of a single binding.';
return FUNC;
})();
l142;
var l145=internals.intern('ASSOC','COMMON-LISP');
l140.fvalue=(function(){var FUNC=(function JSCL_USER_GETBINDING(values,v192,v193){internals.checkArgs(arguments.length-1,2);
var v194=this;
return (function(){return l145.fvalue(values,v192,v193);
})();
});
FUNC.fname='GET-BINDING';
FUNC.docstring='Find a (variable . value) pair in a binding list.';
return FUNC;
})();
l140;
var l146=internals.intern('LOOKUP','COMMON-LISP-USER');
l146.fvalue=(function(){var FUNC=(function JSCL_USER_LOOKUP(values,v196,v197){internals.checkArgs(arguments.length-1,2);
var v198=this;
return (function(){return l142.fvalue(values,l140.fvalue(internals.pv,v196,v197));
})();
});
FUNC.fname='LOOKUP';
FUNC.docstring='Get the value part (for var) from a binding list.';
return FUNC;
})();
l146;
l141.fvalue=(function(){var FUNC=(function JSCL_USER_EXTENDBINDINGS(values,v200,v201,v202){internals.checkArgs(arguments.length-1,3);
var v203=this;
return (function(){return new internals.Cons(new internals.Cons(v200,v201),(v202===l135.value?l14.value:l3.value)!==l3.value?l3.value:v202);
})();
});
FUNC.fname='EXTEND-BINDINGS';
FUNC.docstring='Add a (var . value) pair to a binding list.';
return FUNC;
})();
l141;
l138.fvalue=(function(){var FUNC=(function JSCL_USER_VARIABLEP(values,v205){internals.checkArgs(arguments.length-1,1);
var v206=this;
return (function(){return (v205 instanceof internals.Symbol?l14.value:l3.value)!==l3.value?l22.fvalue(values,l113.fvalue(internals.pv,internals.js_to_lisp((function(){var TMP=v205[internals.xstring(l6)];
return TMP===undefined?l3.value:TMP;
})()),0),'?'):l3.value;
})();
});
FUNC.fname='VARIABLE-P';
FUNC.docstring="Is x a variable (a symbol beginning with `?')?";
return FUNC;
})();
l138;
var l147=internals.intern('MEMO','COMMON-LISP-USER');
var l148=internals.intern('KEY','KEYWORD');
l148.value=l148;
var l149=internals.intern('MAKE-HASH-TABLE','COMMON-LISP');
var l150=internals.intern('SYMBOL-PLIST','COMMON-LISP');
var l151=internals.intern('%PUTF','SB-IMPL');
var l152=internals.intern('%SET-SYMBOL-PLIST','SB-KERNEL');
var l153=internals.intern('SETHASH');
var l154=internals.intern('GETHASH','COMMON-LISP');
l147.fvalue=(function(){var FUNC=(function JSCL_USER_MEMO(values,v208){internals.checkArgsAtLeast(arguments.length-1,1);
var v209;
var v210;
var v211;
var I;
for (I=1;I<arguments.length-1;I+=2)if (arguments[I+1]===l148.value) {v209=arguments[I+1+1];
break;
}if (I==arguments.length-1) v209=internals.symbolFunction(l40);
for (I=1;I<arguments.length-1;I+=2)if (arguments[I+1]===l21.value) {v210=arguments[I+1+1];
break;
}if (I==arguments.length-1) v210=internals.symbolFunction(l47);
for (I=1;I<arguments.length-1;I+=2)if (arguments[I+1]===l27.value) {v211=arguments[I+1+1];
break;
}if (I==arguments.length-1) v211=l3.value;
var START=1;
if ((arguments.length-1-START)%2==1) throw 'Odd number of keyword arguments.';
for (I=START;I<arguments.length-1;I+=2)if (arguments[I+1]!==l148.value&&arguments[I+1]!==l21.value&&arguments[I+1]!==l27.value) throw 'Unknown keyword argument '+arguments[I+1]['name'];
var v212=this;
return (function(){return (function(v214){(function(){var v216=v211;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v218){switch(arguments.length-1){case 0:v218=l3.value;
;
default:break;
}var v217=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v217=new internals.Cons(arguments[I+1],v217);
var v219=this;
return (function(v220){l152.fvalue(internals.pv,v216,v220);
return v218;
})(l151.fvalue(internals.pv,l150.fvalue(internals.pv,v216),l147,v218));
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=v214;
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
return (function JSCL_USER_NIL(values){var v221=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v221=new internals.Cons(arguments[I+1],v221);
var v222=this;
return (function(v223){return (function(){var FUNC=(function JSCL_USER_NIL(values,v225,v226){switch(arguments.length-1){case 0:v225=l3.value;
;
case 1:v226=l3.value;
;
default:break;
}var v224=l3.value;
var I;
for (I=arguments.length-1-1;I>=2;I--)v224=new internals.Cons(arguments[I+1],v224);
var v227=this;
return v226!==l3.value?v225:(function(){var v229=v223;
var v230=v214;
var v231=l3.value;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v233){switch(arguments.length-1){case 0:v233=l3.value;
;
default:break;
}var v232=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v232=new internals.Cons(arguments[I+1],v232);
var v234=this;
return l153.fvalue(internals.pv,v233,v229,v230),v233;
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=(function(){var F=v208;
var ARGS=[values];
var TAIL=v221;
while (TAIL!=l3.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})();
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=l154.fvalue(values,v223,v214);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})((function(){var F=v209;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v221);
})());
});
})(l149.fvalue(internals.pv,l21.value,v210));
})();
});
FUNC.fname='MEMO';
FUNC.docstring='Return a memo-function of fn.';
return FUNC;
})();
l147;
var l155=internals.intern('MEMOIZE','COMMON-LISP-USER');
var l156=internals.intern('CLEAR-MEMOIZE','COMMON-LISP-USER');
l155.fvalue=(function(){var FUNC=(function JSCL_USER_MEMOIZE(values,v235){internals.checkArgsAtLeast(arguments.length-1,1);
var v236;
var v237;
var I;
for (I=1;I<arguments.length-1;I+=2)if (arguments[I+1]===l148.value) {v236=arguments[I+1+1];
break;
}if (I==arguments.length-1) v236=internals.symbolFunction(l40);
for (I=1;I<arguments.length-1;I+=2)if (arguments[I+1]===l21.value) {v237=arguments[I+1+1];
break;
}if (I==arguments.length-1) v237=internals.symbolFunction(l47);
var START=1;
if ((arguments.length-1-START)%2==1) throw 'Odd number of keyword arguments.';
for (I=START;I<arguments.length-1;I+=2)if (arguments[I+1]!==l148.value&&arguments[I+1]!==l21.value) throw 'Unknown keyword argument '+arguments[I+1]['name'];
var v238=this;
return (function(){l156.fvalue(internals.pv,v235);
return (function(){var v241=v235;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v243){switch(arguments.length-1){case 0:v243=l3.value;
;
default:break;
}var v242=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v242=new internals.Cons(arguments[I+1],v242);
var v244=this;
return v241.fvalue=v243;
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=l147.fvalue(values,internals.symbolFunction(v235),l27.value,v235,l148.value,v236,l21.value,v237);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
})();
});
FUNC.fname='MEMOIZE';
FUNC.docstring="Replace fn-name's global definition with a memoized version.";
return FUNC;
})();
l155;
var l157=internals.intern('GET','COMMON-LISP');
var l158=internals.intern('CLRHASH','COMMON-LISP');
l156.fvalue=(function(){var FUNC=(function JSCL_USER_CLEARMEMOIZE(values,v245){internals.checkArgs(arguments.length-1,1);
var v246=this;
return (function(){return (function(v248){return v248!==l3.value?l158.fvalue(values,v248):l3.value;
})(l157.fvalue(internals.pv,v245,l147));
})();
});
FUNC.fname='CLEAR-MEMOIZE';
FUNC.docstring='Clear the hash table from a memo function.';
return FUNC;
})();
l156;
var l159=internals.intern('MAKE-DELAY','COMMON-LISP-USER');
var l160=internals.intern('VALUE','KEYWORD');
l160.value=l160;
var l161=internals.intern('COMPUTED?','KEYWORD');
l161.value=l161;
var l162=internals.intern('DELAY','COMMON-LISP-USER');
var l163=internals.intern('DELAY-P','COMMON-LISP-USER');
var l164=internals.intern('COPY-DELAY','COMMON-LISP-USER');
var l165=internals.intern('COPY-LIST','COMMON-LISP');
var l166=internals.intern('DELAY-VALUE','COMMON-LISP-USER');
var l167=internals.make_lisp_string("The object `~S' is not of type `~S'");
var l168=internals.make_lisp_string('DELAY');
var l169=internals.intern('NTH','COMMON-LISP');
var l170=internals.intern('VALIDATE-REQVARS');
var l171=internals.intern('VALIDATE-MAX-ARGS');
var l172=internals.intern('GENSYM','COMMON-LISP');
var l173=internals.intern('PROGN','COMMON-LISP');
var l174=internals.intern('RPLACA','COMMON-LISP');
var l175=internals.intern('NTHCDR','COMMON-LISP');
var l176=internals.intern('*SETF-EXPANDERS*');
var l177=internals.intern('DELAY-COMPUTED?','COMMON-LISP-USER');
l159.fvalue=(function(){var FUNC=(function JSCL_USER_MAKEDELAY(values){var v249;
var v250;
var I;
for (I=0;I<arguments.length-1;I+=2)if (arguments[I+1]===l160.value) {v249=arguments[I+1+1];
break;
}if (I==arguments.length-1) v249=l3.value;
for (I=0;I<arguments.length-1;I+=2)if (arguments[I+1]===l161.value) {v250=arguments[I+1+1];
break;
}if (I==arguments.length-1) v250=l3.value;
var START=0;
if ((arguments.length-1-START)%2==1) throw 'Odd number of keyword arguments.';
for (I=START;I<arguments.length-1;I+=2)if (arguments[I+1]!==l160.value&&arguments[I+1]!==l161.value) throw 'Unknown keyword argument '+arguments[I+1]['name'];
var v251=this;
return (function(){return l18.fvalue(values,l162,v249,v250);
})();
});
FUNC.fname='MAKE-DELAY';
return FUNC;
})();
l159;
l163.fvalue=(function(){var FUNC=(function JSCL_USER_DELAYP(values,v253){internals.checkArgs(arguments.length-1,1);
var v254=this;
return (function(){return (v253 instanceof internals.Cons?l14.value:l3.value)!==l3.value?internals.car(v253)===l162?l14.value:l3.value:l3.value;
})();
});
FUNC.fname='DELAY-P';
return FUNC;
})();
l163;
l164.fvalue=(function(){var FUNC=(function JSCL_USER_COPYDELAY(values,v256){internals.checkArgs(arguments.length-1,1);
var v257=this;
return (function(){return l165.fvalue(values,v256);
})();
});
FUNC.fname='COPY-DELAY';
return FUNC;
})();
l164;
l166.fvalue=(function(){var FUNC=(function JSCL_USER_DELAYVALUE(values,v259){internals.checkArgs(arguments.length-1,1);
var v260=this;
return (function(){if (l163.fvalue(internals.pv,v259)!==l3.value) l3.value;
 else l52.fvalue(internals.pv,l167,v259,l168);
return l169.fvalue(values,1,v259);
})();
});
FUNC.fname='DELAY-VALUE';
return FUNC;
})();
l166;
(function(){var v263=new internals.Cons(l166,(function JSCL_USER_NIL(values){var v264=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v264=new internals.Cons(arguments[I+1],v264);
var v265=this;
return (function(){var v267=l170.fvalue(internals.pv,v264,1);
var v268=internals.car(v267);
var v269=l171.fvalue(internals.pv,internals.cdr(v267));
return (function(v270,v271){return values(l18.fvalue(internals.pv,v270),l18.fvalue(internals.pv,v268),l18.fvalue(internals.pv,v271),l18.fvalue(internals.pv,l173,l18.fvalue(internals.pv,l174,l18.fvalue(internals.pv,l175,1,v270),v271),v271),l18.fvalue(internals.pv,l166,v270));
})(l172.fvalue(internals.pv),l172.fvalue(internals.pv));
})();
}));
var v272=new internals.Cons(v263,internals.symbolValue(l176));
return l176.value=v272;
})();
l166;
l177.fvalue=(function(){var FUNC=(function JSCL_USER_DELAYCOMPUTED(values,v273){internals.checkArgs(arguments.length-1,1);
var v274=this;
return (function(){if (l163.fvalue(internals.pv,v273)!==l3.value) l3.value;
 else l52.fvalue(internals.pv,l167,v273,l168);
return l169.fvalue(values,2,v273);
})();
});
FUNC.fname='DELAY-COMPUTED?';
return FUNC;
})();
l177;
(function(){var v277=new internals.Cons(l177,(function JSCL_USER_NIL(values){var v278=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v278=new internals.Cons(arguments[I+1],v278);
var v279=this;
return (function(){var v281=l170.fvalue(internals.pv,v278,1);
var v282=internals.car(v281);
var v283=l171.fvalue(internals.pv,internals.cdr(v281));
return (function(v284,v285){return values(l18.fvalue(internals.pv,v284),l18.fvalue(internals.pv,v282),l18.fvalue(internals.pv,v285),l18.fvalue(internals.pv,l173,l18.fvalue(internals.pv,l174,l18.fvalue(internals.pv,l175,2,v284),v285),v285),l18.fvalue(internals.pv,l177,v284));
})(l172.fvalue(internals.pv),l172.fvalue(internals.pv));
})();
}));
var v286=new internals.Cons(v277,internals.symbolValue(l176));
return l176.value=v286;
})();
l177;
l162;
var l178=internals.intern('FORCE','COMMON-LISP-USER');
l178.fvalue=(function(){var FUNC=(function JSCL_USER_FORCE(values,v287){internals.checkArgs(arguments.length-1,1);
var v288=this;
return (function(){return l177.fvalue(internals.pv,v287)!==l3.value?l166.fvalue(values,v287):(function(v295){(function(){var v297=v287;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v299){switch(arguments.length-1){case 0:v299=l3.value;
;
default:break;
}var v298=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v298=new internals.Cons(arguments[I+1],v298);
var v300=this;
return (function(){var TMP=l175.fvalue(internals.pv,2,v297);
TMP.car=v299;
return TMP;
})(),v299;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=l14.value;
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
return v295;
})((function(){var v291=v287;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v293){switch(arguments.length-1){case 0:v293=l3.value;
;
default:break;
}var v292=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v292=new internals.Cons(arguments[I+1],v292);
var v294=this;
return (function(){var TMP=l175.fvalue(internals.pv,1,v291);
TMP.car=v293;
return TMP;
})(),v293;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=(function(){var F=l166.fvalue(internals.pv,v287);
return (typeof F==='function'?F:F.fvalue)(values);
})();
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})());
})();
});
FUNC.fname='FORCE';
FUNC.docstring='Do a delayed computation, or fetch its previously-computed value.';
return FUNC;
})();
l178;
var l179=internals.intern('QUEUE-CONTENTS','COMMON-LISP-USER');
l179.fvalue=(function(){var FUNC=(function JSCL_USER_QUEUECONTENTS(values,v301){internals.checkArgs(arguments.length-1,1);
var v302=this;
return (function(){return internals.cdr(v301);
})();
});
FUNC.fname='QUEUE-CONTENTS';
return FUNC;
})();
l179;
var l180=internals.intern('MAKE-QUEUE','COMMON-LISP-USER');
l180.fvalue=(function(){var FUNC=(function JSCL_USER_MAKEQUEUE(values){internals.checkArgsAtMost(arguments.length-1,0);
var v304=this;
return (function(){return (function(v306){return (function(){var v308=v306;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v310){switch(arguments.length-1){case 0:v310=l3.value;
;
default:break;
}var v309=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v309=new internals.Cons(arguments[I+1],v309);
var v311=this;
return (function(){var TMP=v308;
TMP.car=v310;
return TMP;
})(),v310;
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=v306;
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
})(new internals.Cons(l3.value,l3.value));
})();
});
FUNC.fname='MAKE-QUEUE';
FUNC.docstring='Build a new queue, with no elements.';
return FUNC;
})();
l180;
var l181=internals.intern('ENQUEUE','COMMON-LISP-USER');
var l182=internals.intern('%RPLACD','SB-KERNEL');
l181.fvalue=(function(){var FUNC=(function JSCL_USER_ENQUEUE(values,v312,v313){internals.checkArgs(arguments.length-1,2);
var v314=this;
return (function(){(function(){var v317=v313;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v319){switch(arguments.length-1){case 0:v319=l3.value;
;
default:break;
}var v318=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v318=new internals.Cons(arguments[I+1],v318);
var v320=this;
return (function(){var TMP=v317;
TMP.car=v319;
return TMP;
})(),v319;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=(function(){var v322=internals.car(v313);
return (function(){var FUNC=(function JSCL_USER_NIL(values,v324){switch(arguments.length-1){case 0:v324=l3.value;
;
default:break;
}var v323=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v323=new internals.Cons(arguments[I+1],v323);
var v325=this;
return l182.fvalue(values,v322,v324);
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=new internals.Cons(v312,l3.value);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
return v313;
})();
});
FUNC.fname='ENQUEUE';
FUNC.docstring='Insert item at the end of the queue.';
return FUNC;
})();
l181;
var l183=internals.intern('DEQUEUE','COMMON-LISP-USER');
l183.fvalue=(function(){var FUNC=(function JSCL_USER_DEQUEUE(values,v326){internals.checkArgs(arguments.length-1,1);
var v327=this;
return (function(){(function(){var v330=v326;
var v331=internals.cdr(v330);
var v332=internals.cdr(v331);
(function(){var TMP=v330;
TMP.cdr=v332;
return TMP;
})();
v332;
return internals.car(v331);
})();
if (l86.fvalue(internals.pv,internals.cdr(v326))!==l3.value) (function(){var v334=v326;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v336){switch(arguments.length-1){case 0:v336=l3.value;
;
default:break;
}var v335=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v335=new internals.Cons(arguments[I+1],v335);
var v337=this;
return (function(){var TMP=v334;
TMP.car=v336;
return TMP;
})(),v336;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=v326;
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
 else l3.value;
return v326;
})();
});
FUNC.fname='DEQUEUE';
FUNC.docstring='Remove an item from the front of the queue.';
return FUNC;
})();
l183;
var l184=internals.intern('FRONT','COMMON-LISP-USER');
l184.fvalue=(function(){var FUNC=(function JSCL_USER_FRONT(values,v338){internals.checkArgs(arguments.length-1,1);
var v339=this;
return (function(){return l40.fvalue(values,l179.fvalue(internals.pv,v338));
})();
});
FUNC.fname='FRONT';
return FUNC;
})();
l184;
var l185=internals.intern('EMPTY-QUEUE-P','COMMON-LISP-USER');
l185.fvalue=(function(){var FUNC=(function JSCL_USER_EMPTYQUEUEP(values,v341){internals.checkArgs(arguments.length-1,1);
var v342=this;
return (function(){return l86.fvalue(values,l179.fvalue(internals.pv,v341));
})();
});
FUNC.fname='EMPTY-QUEUE-P';
return FUNC;
})();
l185;
var l186=internals.intern('QUEUE-NCONC','COMMON-LISP-USER');
l186.fvalue=(function(){var FUNC=(function JSCL_USER_QUEUENCONC(values,v344,v345){internals.checkArgs(arguments.length-1,2);
var v346=this;
return (function(){return (function(){var v349=v344;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v351){switch(arguments.length-1){case 0:v351=l3.value;
;
default:break;
}var v350=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v350=new internals.Cons(arguments[I+1],v350);
var v352=this;
return (function(){var TMP=v349;
TMP.car=v351;
return TMP;
})(),v351;
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=l106.fvalue(values,(function(){var v354=internals.car(v344);
return (function(){var FUNC=(function JSCL_USER_NIL(values,v356){switch(arguments.length-1){case 0:v356=l3.value;
;
default:break;
}var v355=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v355=new internals.Cons(arguments[I+1],v355);
var v357=this;
return l182.fvalue(values,v354,v356);
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=v345;
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})());
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
})();
});
FUNC.fname='QUEUE-NCONC';
FUNC.docstring='Add the elements of LIST to the end of the queue.';
return FUNC;
})();
l186;
var l187=internals.intern('SORT*','COMMON-LISP-USER');
var l188=internals.intern('COPY-SEQ','COMMON-LISP');
var l189=internals.intern('SORT','COMMON-LISP');
l187.fvalue=(function(){var FUNC=(function JSCL_USER_SORT(values,v358,v359){internals.checkArgsAtLeast(arguments.length-1,2);
var v360;
var I;
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l148.value) {v360=arguments[I+1+1];
break;
}if (I==arguments.length-1) v360=l3.value;
var START=2;
if ((arguments.length-1-START)%2==1) throw 'Odd number of keyword arguments.';
for (I=START;I<arguments.length-1;I+=2)if (arguments[I+1]!==l148.value) throw 'Unknown keyword argument '+arguments[I+1]['name'];
var v361=this;
return (function(){return l189.fvalue(values,l188.fvalue(internals.pv,v358),v359,l148.value,v360);
})();
});
FUNC.fname='SORT*';
FUNC.docstring='Sort without altering the sequence';
return FUNC;
})();
l187;
var l190=internals.intern('REUSE-CONS','COMMON-LISP-USER');
l190.fvalue=(function(){var FUNC=(function JSCL_USER_REUSECONS(values,v363,v364,v365){internals.checkArgs(arguments.length-1,3);
var v366=this;
return (function(){return (l47.fvalue(internals.pv,v363,internals.car(v365))!==l3.value?l47.fvalue(internals.pv,v364,internals.cdr(v365)):l3.value)!==l3.value?v365:new internals.Cons(v363,v364);
})();
});
FUNC.fname='REUSE-CONS';
FUNC.docstring='Return (cons x y), or reuse x-y if it is equal to (cons x y)';
return FUNC;
})();
l190;
l87.fvalue=(function(){var FUNC=(function JSCL_USER_LENGTH(values,v368){internals.checkArgs(arguments.length-1,1);
var v369=this;
return (function(){return (v368 instanceof internals.Cons?l14.value:l3.value)!==l3.value?l86.fvalue(values,internals.cdr(v368)):l3.value;
})();
});
FUNC.fname='LENGTH=1';
FUNC.docstring='Is x a list of length 1?';
return FUNC;
})();
l87;
var l191=internals.intern('REST3','COMMON-LISP-USER');
var l192=internals.intern('CDDDR','COMMON-LISP');
l191.fvalue=(function(){var FUNC=(function JSCL_USER_REST(values,v371){internals.checkArgs(arguments.length-1,1);
var v372=this;
return (function(){return l192.fvalue(values,v371);
})();
});
FUNC.fname='REST3';
FUNC.docstring='The rest of a list after the first THREE elements.';
return FUNC;
})();
l191;
var l193=internals.intern('UNIQUE-FIND-IF-ANYWHERE','COMMON-LISP-USER');
var l194=internals.intern('ADJOIN','COMMON-LISP');
l193.fvalue=(function(){var FUNC=(function JSCL_USER_UNIQUEFINDIFANYWHERE(values,v374,v375,v376){internals.checkArgsAtLeast(arguments.length-1,2);
internals.checkArgsAtMost(arguments.length-1,3);
switch(arguments.length-1){case 2:v376=l3.value;
;
default:break;
}var v377=this;
return (function(){return l67.fvalue(internals.pv,v375)!==l3.value?(function(){var F=v374;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v375);
})()!==l3.value?l194.fvalue(values,v375,v376):v376:l193.fvalue(values,v374,l40.fvalue(internals.pv,v375),l193.fvalue(internals.pv,v374,l74.fvalue(internals.pv,v375),v376));
})();
});
FUNC.fname='UNIQUE-FIND-IF-ANYWHERE';
FUNC.docstring='Return a list of leaves of tree satisfying predicate,\n  with duplicates removed.';
return FUNC;
})();
l193;
var l195=internals.intern('FIND-IF-ANYWHERE','COMMON-LISP-USER');
l195.fvalue=(function(){var FUNC=(function JSCL_USER_FINDIFANYWHERE(values,v379,v380){internals.checkArgs(arguments.length-1,2);
var v381=this;
return (function(){return l67.fvalue(internals.pv,v380)!==l3.value?(function(){var F=v379;
return (typeof F==='function'?F:F.fvalue)(values,v380);
})():(function(v383){return v383!==l3.value?v383:l195.fvalue(values,v379,l74.fvalue(internals.pv,v380));
})(l195.fvalue(internals.pv,v379,l40.fvalue(internals.pv,v380)));
})();
});
FUNC.fname='FIND-IF-ANYWHERE';
FUNC.docstring='Does predicate apply to any atom in the tree?';
return FUNC;
})();
l195;
var l196=internals.intern('NOT-NULL','COMMON-LISP-USER');
l196.fvalue=(function(){var FUNC=(function JSCL_USER_NOTNULL(values,v384){internals.checkArgs(arguments.length-1,1);
var v385=this;
return (function(){return l24.fvalue(values,l86.fvalue(internals.pv,v384));
})();
});
FUNC.fname='NOT-NULL';
return FUNC;
})();
l196;
var l197=internals.intern('FIRST-OR-NIL','COMMON-LISP-USER');
l197.fvalue=(function(){var FUNC=(function JSCL_USER_FIRSTORNIL(values,v387){internals.checkArgs(arguments.length-1,1);
var v388=this;
return (function(){return (v387 instanceof internals.Cons?l14.value:l3.value)!==l3.value?l40.fvalue(values,v387):l3.value;
})();
});
FUNC.fname='FIRST-OR-NIL';
FUNC.docstring='The first element of x if it is a list; else nil.';
return FUNC;
})();
l197;
var l198=internals.intern('FIRST-OR-SELF','COMMON-LISP-USER');
l198.fvalue=(function(){var FUNC=(function JSCL_USER_FIRSTORSELF(values,v390){internals.checkArgs(arguments.length-1,1);
var v391=this;
return (function(){return (v390 instanceof internals.Cons?l14.value:l3.value)!==l3.value?l40.fvalue(values,v390):v390;
})();
});
FUNC.fname='FIRST-OR-SELF';
FUNC.docstring='The first element of x, if it is a list; else x itself.';
return FUNC;
})();
l198;
var l199=internals.intern('DEFMETHOD','COMMON-LISP');
var l200=internals.intern('DEFUN','COMMON-LISP');
var l201=internals.intern('QUOTE','COMMON-LISP');
var l202=internals.intern('LIST*','COMMON-LISP');
var l203=internals.intern('%COMPILE-DEFMACRO');
if ((l199.fvalue!==internals.unboundFunction?l14.value:l3.value)!==l3.value) l3.value;
 else l203.fvalue(internals.pv,l199,(function JSCL_USER_NIL(values,v393){internals.checkArgs(arguments.length-1,1);
var v394=this;
l3.value;
return (function(){return (function(){var v397=l170.fvalue(internals.pv,v393,2);
var v398=internals.car(v397);
var v399=internals.car(internals.cdr(v397));
var v400=internals.cdr(internals.cdr(v397));
return l202.fvalue(values,l200,l18.fvalue(internals.pv,l201,v398),l18.fvalue(internals.pv,l201,v399),v400);
})();
})();
}));
var l204=internals.intern('MAP-INTO','COMMON-LISP');
var l205=internals.intern('MAKE-LIST','COMMON-LISP');
var l206=internals.intern('MOST-POSITIVE-FIXNUM','COMMON-LISP');
var l207=internals.intern('ARRAY-DIMENSION','COMMON-LISP');
var l208=internals.intern('MIN','COMMON-LISP');
var l209=internals.intern('%RPLACA','SB-KERNEL');
var l210=internals.intern('VECTORP','COMMON-LISP');
var l211=internals.intern('DO-ONE-CALL','COMMON-LISP-USER');
var l212=internals.intern('INLINE','COMMON-LISP');
var l213=internals.intern('DECLARE','COMMON-LISP');
var l214=internals.intern('1+','COMMON-LISP');
var l215=internals.intern('ASET');
if ((l204.fvalue!==internals.unboundFunction?l14.value:l3.value)!==l3.value) l3.value;
 else {l3.value;
l204.fvalue=(function(){var FUNC=(function JSCL_USER_MAPINTO(values,v402,v403){internals.checkArgsAtLeast(arguments.length-1,2);
var v401=l3.value;
var I;
for (I=arguments.length-1-1;I>=2;I--)v401=new internals.Cons(arguments[I+1],v401);
var v404=this;
return (function(){return (function(v406,v407){if (v401!==l3.value) (function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v410){switch(arguments.length-1){case 0:v410=l3.value;
;
default:break;
}var v409=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v409=new internals.Cons(arguments[I+1],v409);
var v411=this;
return v407=v410;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=l208.fvalue(values,v407,(function(v412,v413){return (function(v414,v415){return (function(){try{var v416=[];
return (function(){var v417=1;
var v418=[];
TBLOOP:while (true){try{switch(v417){case 1:if (l19.fvalue(internals.pv,v413)!==l3.value) (function(){throw new internals.TagNLX(v418,2);
})();
 else l3.value;
v412=internals.car(v413);
v413=internals.cdr(v413);
{v415=l111.fvalue(internals.pv,v412);
if ((function(){var x1=v415;
if (typeof x1!='number') throw 'Not a number!';
var x2=v414;
if (typeof x2!='number') throw 'Not a number!';
return x1<x2?l14.value:l3.value;
})()!==l3.value) v414=v415;
 else l3.value;
}(function(){throw new internals.TagNLX(v418,1);
})();
case 2:(function(){throw new internals.BlockNLX(v416,v414,'NIL');
})();
default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v418) v417=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
}catch (CF){if (CF instanceof internals.BlockNLX&&CF.id==v416) return CF.values;
 else throw CF;
}})();
})(l206.value,0);
})(l3.value,v401));
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
 else l3.value;
(function(v449,v450){l213.fvalue(internals.pv,l212.fvalue(internals.pv,internals.symbolValue(l211)));
return l90.fvalue(internals.pv,v402)!==l3.value?(function(v451,v452){return (function(v453){return (function(){return (function(){var v455=1;
var v456=[];
TBLOOP:while (true){try{switch(v455){case 1:if ((function(){var x1=v451;
if (typeof x1!='number') throw 'Not a number!';
var x2=v452;
if (typeof x2!='number') throw 'Not a number!';
return x1>x2?l14.value:l3.value;
})()!==l3.value) (function(){throw new internals.TagNLX(v456,3);
})();
 else l3.value;
case 2:if (l67.fvalue(internals.pv,v453)!==l3.value) (function(){throw new internals.TagNLX(v456,3);
})();
 else l3.value;
(function(){var v458=v453;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v460){switch(arguments.length-1){case 0:v460=l3.value;
;
default:break;
}var v459=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v459=new internals.Cons(arguments[I+1],v459);
var v461=this;
return l209.fvalue(values,v458,v460);
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=v449(values,v451);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
v451=l214.fvalue(internals.pv,v451);
if ((function(){var x1=v451;
if (typeof x1!='number') throw 'Not a number!';
var x2=v452;
if (typeof x2!='number') throw 'Not a number!';
return x1>x2?l14.value:l3.value;
})()!==l3.value) (function(){throw new internals.TagNLX(v456,3);
})();
 else l3.value;
v453=internals.cdr(v453);
(function(){throw new internals.TagNLX(v456,2);
})();
case 3:v450(internals.pv,v451);
default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v456) v455=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
})();
})(v402);
})(0,(function(){var x1=v407;
if (typeof x1!='number') throw 'Not a number!';
return x1-1;
})()):(function(v462,v463){return (function(){return (function(){var v465=1;
var v466=[];
TBLOOP:while (true){try{switch(v465){case 1:if ((function(){var x1=v462;
if (typeof x1!='number') throw 'Not a number!';
var x2=v463;
if (typeof x2!='number') throw 'Not a number!';
return x1>x2?l14.value:l3.value;
})()!==l3.value) (function(){throw new internals.TagNLX(v466,2);
})();
 else l3.value;
(function(){var v468=v402;
var v469=v462;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v471){switch(arguments.length-1){case 0:v471=l3.value;
;
default:break;
}var v470=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v470=new internals.Cons(arguments[I+1],v470);
var v472=this;
return l215.fvalue(values,v468,v469,v471);
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=v449(values,v462);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
v462=l214.fvalue(internals.pv,v462);
(function(){throw new internals.TagNLX(v466,1);
})();
case 2:v450(internals.pv,v462);
default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v466) v465=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
})();
})(0,(function(){var x1=v407;
if (typeof x1!='number') throw 'Not a number!';
return x1-1;
})());
})((function JSCL_USER_NIL(values,v419){internals.checkArgs(arguments.length-1,1);
var v420=this;
return (function(){(function(v422){return (function(v423){return (function(){return (function(){var v425=1;
var v426=[];
TBLOOP:while (true){try{switch(v425){case 1:if (l67.fvalue(internals.pv,v422)!==l3.value) (function(){throw new internals.TagNLX(v426,3);
})();
 else l3.value;
case 2:if (l67.fvalue(internals.pv,v423)!==l3.value) (function(){throw new internals.TagNLX(v426,3);
})();
 else l3.value;
if (l90.fvalue(internals.pv,l40.fvalue(internals.pv,v422))!==l3.value) (function(){var v428=v423;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v430){switch(arguments.length-1){case 0:v430=l3.value;
;
default:break;
}var v429=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v429=new internals.Cons(arguments[I+1],v429);
var v431=this;
return l209.fvalue(values,v428,v430);
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=(function(){var v433=v422;
var v434=internals.car(v433);
var v435=internals.cdr(v434);
l209.fvalue(internals.pv,v433,v435);
return internals.car(v434);
})();
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
 else (function(){var v437=v423;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v439){switch(arguments.length-1){case 0:v439=l3.value;
;
default:break;
}var v438=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v438=new internals.Cons(arguments[I+1],v438);
var v440=this;
return l209.fvalue(values,v437,v439);
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=l93.fvalue(values,l40.fvalue(internals.pv,v422),v419);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
v422=internals.cdr(v422);
if (l67.fvalue(internals.pv,v422)!==l3.value) (function(){throw new internals.TagNLX(v426,3);
})();
 else l3.value;
v423=internals.cdr(v423);
(function(){throw new internals.TagNLX(v426,2);
})();
case 3:default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v426) v425=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
})();
})(v406);
})(v401);
return (function(){var F=v403;
var ARGS=[values];
var TAIL=v406;
while (TAIL!=l3.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})();
})();
}),(function JSCL_USER_NIL(values,v441){internals.checkArgs(arguments.length-1,1);
var v442=this;
return (function(){return (l210.fvalue(internals.pv,v402)!==l3.value?l96.fvalue(internals.pv,v402):l3.value)!==l3.value?(function(){var v445=v402;
return (function(){var FUNC=(function JSCL_USER_NIL(values,v447){switch(arguments.length-1){case 0:v447=l3.value;
;
default:break;
}var v446=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v446=new internals.Cons(arguments[I+1],v446);
var v448=this;
return l97.fvalue(values,v445,v447);
});
var ARGS=[values];
return (function(){var values=internals.mv;
var VS;
VS=l99.fvalue(values,v441,l98.fvalue(internals.pv,v402));
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})():l3.value;
})();
}));
return v402;
})(l205.fvalue(internals.pv,l111.fvalue(internals.pv,v401)),l90.fvalue(internals.pv,v402)!==l3.value?l206.value:l207.fvalue(internals.pv,v402,0));
})();
});
FUNC.fname='MAP-INTO';
FUNC.docstring='Destructively set elements of RESULT-SEQUENCE to the results\n  of applying FUNCTION to respective elements of SEQUENCES.';
return FUNC;
})();
l204;
}if ((l82.fvalue!==internals.unboundFunction?l14.value:l3.value)!==l3.value) l3.value;
 else {l3.value;
l82.fvalue=(function(){var FUNC=(function JSCL_USER_COMPLEMENT(values,v473){internals.checkArgs(arguments.length-1,1);
var v474=this;
return (function(){return (function JSCL_USER_NIL(values){var v476=l3.value;
var I;
for (I=arguments.length-1-1;I>=0;I--)v476=new internals.Cons(arguments[I+1],v476);
var v477=this;
return l24.fvalue(values,(function(){var F=v473;
var ARGS=[internals.pv];
var TAIL=v476;
while (TAIL!=l3.value){ARGS.push(TAIL.car);
TAIL=TAIL.cdr;
}return (typeof F==='function'?F:F.fvalue).apply(this,ARGS);
})());
});
})();
});
FUNC.fname='COMPLEMENT';
FUNC.docstring='If FN returns y, then (complement FN) returns (not y).';
return FUNC;
})();
l82;
}var l216=internals.intern('WITH-COMPILATION-UNIT','COMMON-LISP');
if ((l216.fvalue!==internals.unboundFunction?l14.value:l3.value)!==l3.value) l3.value;
 else l203.fvalue(internals.pv,l216,(function(){var FUNC=(function JSCL_USER_NIL(values,v478){internals.checkArgs(arguments.length-1,1);
var v479=this;
return (function(){return (function(){var v482=l170.fvalue(internals.pv,v478,1);
var v483=internals.car(v482);
var v484=internals.cdr(v482);
return new internals.Cons(l173,v484);
})();
})();
});
FUNC.docstring='Do the body, but delay compiler warnings until the end.';
return FUNC;
})());
var l217=internals.intern('REDUCE*','COMMON-LISP-USER');
var l218=internals.intern('REDUCE-LIST','COMMON-LISP-USER');
var l219=internals.intern('REDUCE-VECT','COMMON-LISP-USER');
var l220=internals.intern('START','KEYWORD');
l220.value=l220;
var l221=internals.intern('END','KEYWORD');
l221.value=l221;
var l222=internals.intern('START','COMMON-LISP-USER');
var l223=internals.make_lisp_string('Illegal subsequence of ~a --- :start ~d :end ~d');
var l224=internals.intern('ASSERT','COMMON-LISP');
var l225=internals.intern('1-','COMMON-LISP');
var l226=internals.intern('VECTOR','COMMON-LISP');
var l227=internals.intern('COERCE','COMMON-LISP');
var l228=internals.intern('MINUSP','COMMON-LISP');
if (l3.value!==l3.value) {l3.value;
l217.fvalue=(function(){var FUNC=(function JSCL_USER_REDUCE(values,v485,v486,v487,v488,v489,v490,v491,v492){internals.checkArgs(arguments.length-1,8);
var v493=this;
return (function(){return (function(){var F=l90.fvalue(internals.pv,v486)!==l3.value?internals.symbolFunction(l218):internals.symbolFunction(l219);
return (typeof F==='function'?F:F.fvalue)(values,v485,v486,v487,(function(v495){return v495!==l3.value?v495:0;
})(v488),v489,v490,v491,v492);
})();
})();
});
FUNC.fname='REDUCE*';
return FUNC;
})();
l217;
l3.value;
l120.fvalue=(function(){var FUNC=(function JSCL_USER_REDUCE(values,v496,v497){internals.checkArgsAtLeast(arguments.length-1,2);
var v498;
var v499;
var v500;
var v501;
var v502;
var v503=l3.value;
var I;
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l118.value) {v498=arguments[I+1+1];
break;
}if (I==arguments.length-1) v498=l3.value;
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l220.value) {v499=arguments[I+1+1];
break;
}if (I==arguments.length-1) v499=l3.value;
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l221.value) {v500=arguments[I+1+1];
break;
}if (I==arguments.length-1) v500=l3.value;
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l148.value) {v501=arguments[I+1+1];
break;
}if (I==arguments.length-1) v501=l3.value;
for (I=2;I<arguments.length-1;I+=2)if (arguments[I+1]===l119.value) {v502=arguments[I+1+1];
v503=l14.value;
break;
}if (I==arguments.length-1) v502=l3.value;
var START=2;
if ((arguments.length-1-START)%2==1) throw 'Odd number of keyword arguments.';
for (I=START;I<arguments.length-1;I+=2)if (arguments[I+1]!==l118.value&&arguments[I+1]!==l220.value&&arguments[I+1]!==l221.value&&arguments[I+1]!==l148.value&&arguments[I+1]!==l119.value) throw 'Unknown keyword argument '+arguments[I+1]['name'];
var v504=this;
return (function(){return l217.fvalue(values,v496,v497,v498,v499,v500,v501,v502,v503);
})();
});
FUNC.fname='REDUCE';
return FUNC;
})();
l120;
l3.value;
l219.fvalue=(function(){var FUNC=(function JSCL_USER_REDUCEVECT(values,v506,v507,v508,v509,v510,v511,v512,v513){internals.checkArgs(arguments.length-1,8);
var v514=this;
return (function(){if (l86.fvalue(internals.pv,v510)!==l3.value) (function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v518){switch(arguments.length-1){case 0:v518=l3.value;
;
default:break;
}var v517=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v517=new internals.Cons(arguments[I+1],v517);
var v519=this;
return v510=v518;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=l111.fvalue(values,v507);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
 else l3.value;
l224.fvalue(internals.pv,(function(){var x1=v509;
if (typeof x1!='number') throw 'Not a number!';
var x2=v510;
if (typeof x2!='number') throw 'Not a number!';
var x3=l111.fvalue(internals.pv,v507);
if (typeof x3!='number') throw 'Not a number!';
return 0<=x1&&(x1<=x2&&x2<=x3)?l14.value:l3.value;
})(),l222.fvalue(internals.pv,v510),l223,v507,v509,v510);
return (function(v520){return l47.fvalue(internals.pv,v520,1)!==l3.value?(l3.value,v513!==l3.value?(function(){var F=v506;
return (typeof F==='function'?F:F.fvalue)(values,v512,v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,v509));
})():l93.fvalue(internals.pv,v507,v509));
})():v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(values,l93.fvalue(internals.pv,v507,v509));
})():l93.fvalue(values,v507,v509)):l47.fvalue(internals.pv,v520,0)!==l3.value?(l3.value,v513!==l3.value?v512:(function(){var F=v506;
return (typeof F==='function'?F:F.fvalue)(values);
})()):(l3.value,l24.fvalue(internals.pv,v508)!==l3.value?(function(v521){(function(v522,v523){return (function(){return (function(){var v525=1;
var v526=[];
TBLOOP:while (true){try{switch(v525){case 1:if ((function(){var x1=v522;
if (typeof x1!='number') throw 'Not a number!';
var x2=v523;
if (typeof x2!='number') throw 'Not a number!';
return x1>x2?l14.value:l3.value;
})()!==l3.value) (function(){throw new internals.TagNLX(v526,2);
})();
 else l3.value;
(function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v529){switch(arguments.length-1){case 0:v529=l3.value;
;
default:break;
}var v528=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v528=new internals.Cons(arguments[I+1],v528);
var v530=this;
return v521=v529;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=(function(){var F=v506;
return (typeof F==='function'?F:F.fvalue)(values,v521,v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,v522));
})():l93.fvalue(internals.pv,v507,v522));
})();
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
v522=l214.fvalue(internals.pv,v522);
(function(){throw new internals.TagNLX(v526,1);
})();
case 2:default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v526) v525=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
})();
})((function(){var x1=v509;
if (typeof x1!='number') throw 'Not a number!';
var x2=v513!==l3.value?1:2;
if (typeof x2!='number') throw 'Not a number!';
return x1+x2;
})(),(function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
return x1-1;
})());
return v521;
})(v513!==l3.value?(function(){var F=v506;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v512,v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,v509));
})():l93.fvalue(internals.pv,v507,v509));
})():(function(){var F=v506;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,v509));
})():l93.fvalue(internals.pv,v507,v509),v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,(function(){var x1=v509;
if (typeof x1!='number') throw 'Not a number!';
return x1+1;
})()));
})():l93.fvalue(internals.pv,v507,(function(){var x1=v509;
if (typeof x1!='number') throw 'Not a number!';
return x1+1;
})()));
})()):(function(v531){(function(v532,v533){return (function(){return (function(){var v535=1;
var v536=[];
TBLOOP:while (true){try{switch(v535){case 1:if ((function(){var x1=v532;
if (typeof x1!='number') throw 'Not a number!';
var x2=v533;
if (typeof x2!='number') throw 'Not a number!';
return x1<x2?l14.value:l3.value;
})()!==l3.value) (function(){throw new internals.TagNLX(v536,2);
})();
 else l3.value;
(function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v539){switch(arguments.length-1){case 0:v539=l3.value;
;
default:break;
}var v538=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v538=new internals.Cons(arguments[I+1],v538);
var v540=this;
return v531=v539;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=(function(){var F=v506;
return (typeof F==='function'?F:F.fvalue)(values,v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,v532));
})():l93.fvalue(internals.pv,v507,v532),v531);
})();
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
v532=l225.fvalue(internals.pv,v532);
(function(){throw new internals.TagNLX(v536,1);
})();
case 2:default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v536) v535=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
})();
})((function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
var x2=v513!==l3.value?2:3;
if (typeof x2!='number') throw 'Not a number!';
return x1-x2;
})(),v509);
return v531;
})(v513!==l3.value?(function(){var F=v506;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,(function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
return x1-1;
})()));
})():l93.fvalue(internals.pv,v507,(function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
return x1-1;
})()),v512);
})():(function(){var F=v506;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,(function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
return x1-2;
})()));
})():l93.fvalue(internals.pv,v507,(function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
return x1-2;
})()),v511!==l3.value?(function(){var F=v511;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l93.fvalue(internals.pv,v507,(function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
return x1-1;
})()));
})():l93.fvalue(internals.pv,v507,(function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
return x1-1;
})()));
})()));
})((function(){var x1=v510;
if (typeof x1!='number') throw 'Not a number!';
var x2=v509;
if (typeof x2!='number') throw 'Not a number!';
return x1-x2;
})());
})();
});
FUNC.fname='REDUCE-VECT';
return FUNC;
})();
l219;
l3.value;
l218.fvalue=(function(){var FUNC=(function JSCL_USER_REDUCELIST(values,v541,v542,v543,v544,v545,v546,v547,v548){internals.checkArgs(arguments.length-1,8);
var v549=this;
return (function(){if (l86.fvalue(internals.pv,v545)!==l3.value) (function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v553){switch(arguments.length-1){case 0:v553=l3.value;
;
default:break;
}var v552=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v552=new internals.Cons(arguments[I+1],v552);
var v554=this;
return v545=v553;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=l111.fvalue(values,v542);
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
 else l3.value;
return (function(){var x1=v544;
if (typeof x1!='number') throw 'Not a number!';
return x1>0?l14.value:l3.value;
})()!==l3.value?l218.fvalue(values,v541,l175.fvalue(internals.pv,v544,v542),v543,0,(function(){var x1=v545;
if (typeof x1!='number') throw 'Not a number!';
var x2=v544;
if (typeof x2!='number') throw 'Not a number!';
return x1-x2;
})(),v546,v547,v548):(function(v555){return v555!==l3.value?v555:l47.fvalue(internals.pv,v544,v545);
})(l86.fvalue(internals.pv,v542))!==l3.value?v548!==l3.value?v547:(function(){var F=v541;
return (typeof F==='function'?F:F.fvalue)(values);
})():(function(){var x1=(function(){var x1=v545;
if (typeof x1!='number') throw 'Not a number!';
var x2=v544;
if (typeof x2!='number') throw 'Not a number!';
return x1-x2;
})();
if (typeof x1!='number') throw 'Not a number!';
return x1==1?l14.value:l3.value;
})()!==l3.value?v548!==l3.value?(function(){var F=v541;
return (typeof F==='function'?F:F.fvalue)(values,v547,v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l40.fvalue(internals.pv,v542));
})():l40.fvalue(internals.pv,v542));
})():v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(values,l40.fvalue(internals.pv,v542));
})():l40.fvalue(values,v542):v543!==l3.value?l219.fvalue(values,v541,l227.fvalue(internals.pv,v542,l226),l14.value,v544,v545,v546,v547,v548):l86.fvalue(internals.pv,l74.fvalue(internals.pv,v542))!==l3.value?v548!==l3.value?(function(){var F=v541;
return (typeof F==='function'?F:F.fvalue)(values,v547,v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(internals.pv,l40.fvalue(internals.pv,v542));
})():l40.fvalue(internals.pv,v542));
})():v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(values,l40.fvalue(internals.pv,v542));
})():l40.fvalue(values,v542):(function(v574){if (v545!==l3.value) (function(v575){return (function(){return (function(){var v577=1;
var v578=[];
TBLOOP:while (true){try{switch(v577){case 1:if (l228.fvalue(internals.pv,(v575=l225.fvalue(internals.pv,v575)))!==l3.value) (function(){throw new internals.TagNLX(v578,2);
})();
 else l3.value;
if (v542!==l3.value) l3.value;
 else (function(){throw new internals.TagNLX(v578,2);
})();
(function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v581){switch(arguments.length-1){case 0:v581=l3.value;
;
default:break;
}var v580=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v580=new internals.Cons(arguments[I+1],v580);
var v582=this;
return v574=v581;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=(function(){var F=v541;
return (typeof F==='function'?F:F.fvalue)(values,v574,v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(internals.pv,(function(){var v584=v542;
var v585=internals.cdr(v584);
v542=v585;
return internals.car(v584);
})());
})():(function(){var v587=v542;
var v588=internals.cdr(v587);
v542=v588;
return internals.car(v587);
})());
})();
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
(function(){throw new internals.TagNLX(v578,1);
})();
case 2:default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v578) v577=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
})();
})((function(){var x1=v545;
if (typeof x1!='number') throw 'Not a number!';
var x2=v548!==l3.value?1:2;
if (typeof x2!='number') throw 'Not a number!';
return x1-x2;
})());
 else (function(){return (function(){var v590=1;
var v591=[];
TBLOOP:while (true){try{switch(v590){case 1:if (v542!==l3.value) l3.value;
 else (function(){throw new internals.TagNLX(v591,2);
})();
(function(){return (function(){var FUNC=(function JSCL_USER_NIL(values,v594){switch(arguments.length-1){case 0:v594=l3.value;
;
default:break;
}var v593=l3.value;
var I;
for (I=arguments.length-1-1;I>=1;I--)v593=new internals.Cons(arguments[I+1],v593);
var v595=this;
return v574=v594;
});
var ARGS=[internals.pv];
return (function(){var values=internals.mv;
var VS;
VS=(function(){var F=v541;
return (typeof F==='function'?F:F.fvalue)(values,v574,v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(internals.pv,(function(){var v597=v542;
var v598=internals.cdr(v597);
v542=v598;
return internals.car(v597);
})());
})():(function(){var v600=v542;
var v601=internals.cdr(v600);
v542=v601;
return internals.car(v600);
})());
})();
if (typeof VS==='object'&&'multiple-value' in VS) ARGS=ARGS.concat(VS);
 else ARGS.push(VS);
return FUNC.apply(null,ARGS);
})();
})();
})();
(function(){throw new internals.TagNLX(v591,1);
})();
case 2:default:break TBLOOP;
}}catch (JUMP){if (JUMP instanceof internals.TagNLX&&JUMP.id==v591) v590=JUMP.label;
 else throw JUMP;
}}return l3.value;
})();
})();
return v574;
})(v548!==l3.value?(function(){var F=v541;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v547,v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(internals.pv,(function(){var v557=v542;
var v558=internals.cdr(v557);
v542=v558;
return internals.car(v557);
})());
})():(function(){var v560=v542;
var v561=internals.cdr(v560);
v542=v561;
return internals.car(v560);
})());
})():(function(){var F=v541;
return (typeof F==='function'?F:F.fvalue)(internals.pv,v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(internals.pv,(function(){var v563=v542;
var v564=internals.cdr(v563);
v542=v564;
return internals.car(v563);
})());
})():(function(){var v566=v542;
var v567=internals.cdr(v566);
v542=v567;
return internals.car(v566);
})(),v546!==l3.value?(function(){var F=v546;
return (typeof F==='function'?F:F.fvalue)(internals.pv,(function(){var v569=v542;
var v570=internals.cdr(v569);
v542=v570;
return internals.car(v569);
})());
})():(function(){var v572=v542;
var v573=internals.cdr(v572);
v542=v573;
return internals.car(v572);
})());
})());
})();
});
FUNC.fname='REDUCE-LIST';
return FUNC;
})();
l218;
} else l3.value;
var l229=internals.make_lisp_string('auxfns');
(function(){var v603=l229;
var v604=internals.symbolValue(l13);
return l115.fvalue(internals.pv,v603,v604,l21.value,l22)!==l3.value?v604:(function(v605){return l13.value=v605;
})(new internals.Cons(v603,internals.symbolValue(l13)));
})();
})(jscl.internals.pv, jscl.internals);
})( typeof require !== 'undefined'? require('./jscl'): window.jscl )
